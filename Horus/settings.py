"""
Django settings for Horus project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*43*7^lh@x#bd&-lp4ro48r^th7#f!y*ao8^+9u5@e$$vy3k2='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'horuz.me', 'www.horuz.me']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # Necesario para allauth

    # Aplicaciones del proyecto
    'tienda',

    # Aplicaciones de Allauth para autenticación extendida
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',  # Proveedor Google para registro y login social
    'allauth.socialaccount.providers.facebook',  # Proveedor Facebook para registro y login social

    # Aplicaciones para pagos
    'paypalrestsdk',
    'stripe',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Horus.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'tienda/templates'],  # Ruta donde están tus plantillas personalizadas
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # Necesario para allauth
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'tienda.views.header_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'Horus.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

# Usa la carpeta 'static' para los archivos estáticos durante el desarrollo
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Para producción, esta es la carpeta a la que se recopilarán los archivos
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email configuration for sending registration confirmation
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', 'default-email@example.com')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', '')  # Usa variable de entorno para mayor seguridad
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Django Sites framework
SITE_ID = 1  # Requerido para Allauth

# Configuraciones de Login y Logout con Allauth
LOGIN_REDIRECT_URL = '/catalogo/'  # Redirigir al catálogo después de iniciar sesión
LOGOUT_REDIRECT_URL = '/'  # Redirigir a la página de inicio después de cerrar sesión
LOGIN_URL = '/user/login/'  # URL personalizada para el inicio de sesión

# Configuración de Django Allauth
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'  # Permitir login con nombre de usuario o correo electrónico
ACCOUNT_USERNAME_REQUIRED = True  # Nombre de usuario es requerido
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'optional'  # Verificación de correo opcional (cambiar a 'mandatory' para producción)
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
ACCOUNT_LOGOUT_ON_GET = True  # Cierre de sesión solo con la solicitud GET
ACCOUNT_SESSION_REMEMBER = True  # Recordar sesiones para más comodidad
ACCOUNT_USERNAME_BLACKLIST = ['admin', 'root']  # Restricción de nombres de usuario

# Plantillas de formularios personalizadas con 'django-allauth'
ACCOUNT_FORMS = {
    'login': 'tienda.forms.CustomLoginForm',  # Formulario de inicio de sesión personalizado
    'signup': 'tienda.forms.CustomSignupForm',  # Formulario de registro personalizado
    'reset_password': 'tienda.forms.CustomResetPasswordForm',  # Formulario de restablecimiento de contraseña personalizado
}

# Configuración adicional para limitar intentos de login (seguridad) usando la nueva configuración de tasas
ACCOUNT_RATE_LIMITS = {
    'login_failed': '5/300s',  # Limitar a 5 intentos fallidos en 300 segundos (5 minutos)
}

# Configuración del backend de autenticación para usar tanto username como email
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Requerido para acceso de administración de Django
    'allauth.account.auth_backends.AuthenticationBackend',  # Requerido para el manejo de usuarios de allauth
)

# Uso del framework de mensajes para feedback del usuario
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# Configuración de prefijos y remitentes de correo electrónico para allauth
ACCOUNT_EMAIL_SUBJECT_PREFIX = '[Horuz Autopartes]'
DEFAULT_FROM_EMAIL = 'noreply@horuz.me'

GOOGLE_MAPS_API_KEY = "AIzaSyCsvTfj2qqQYCJF-csXiW08nigzCnVWo1k"

SOCIALACCOUNT_LOGIN_ON_GET = True

# Configuración de proveedores sociales (ejemplo con Google y Facebook)
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '326403212883-8p3cvtuukqonte4bga0l6eecm8p32stk.apps.googleusercontent.com',  # ID de cliente
            'secret': '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',  # secreto de cliente
            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,  # Habilitar OAuth PKCE para mayor seguridad
    },
    'facebook': {
        'METHOD': 'oauth2',
        'SCOPE': ['email', 'public_profile'],
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'picture',
        ],
        'VERIFIED_EMAIL': False,
    },
}

# Seguridad
CSRF_TRUSTED_ORIGINS = ['https://horuz.me',
                        'http://127.0.0.1',
                        'http://localhost']

# Configuración de Stripe
STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY', 'sk_test_51QNo1vBh81Rn7ilnrgBM3EvWFZBG8TqtqKskONuje0aTesY4KdkOcYH3DFI1c8X5ZiDERPTADLoF2fdQA09qwWDH008KTKPuhv')
STRIPE_PUBLIC_KEY = os.getenv('STRIPE_PUBLIC_KEY', 'pk_test_51QNo1vBh81Rn7ilnygBAMZh1W1j8EGIiMCDzblilvYIN99gZImZwxN9v7npOtWnRnaztasHKU4SIOvVAFni72AUo00Axr36Nev')

# Configuración de PayPal
PAYPAL_CLIENT_ID = os.getenv('PAYPAL_CLIENT_ID', 'AYtoVDs22opz5331x392eilv6VK2WbRpPTtUgGik9W8u930HSfSDwbRkKaYfwsZA35GjsZx2ECD9oHJG')
PAYPAL_CLIENT_SECRET = os.getenv('PAYPAL_CLIENT_SECRET', 'EOYHve48g1W7pw8XNlN3WhHvdRch61fDZ7JcmtSxvEMuBziF3nxIMGOcJOZTYbQ1L6wRYZOJdKBrmlQ_')
PAYPAL_MODE = os.getenv('PAYPAL_MODE', 'sandbox')  # Cambia a 'live' en producción

MIDDLEWARE.insert(0, 'django.middleware.security.SecurityMiddleware')
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

ACCOUNT_ADAPTER = 'tienda.adapters.MyAccountAdapter'

# En caso de problemas con IP
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'http'
